스프링(Spring) 프레임워크
	-. Expert One on J2EE Development without EJB, Rod Johnson
	-. EJB를 사용하지 않고 엔터프라이즈 애플리케이션 개발 방법 소개
	-. 스프링은 엔터프라이즈 애플리케이션에서 필요로 하는 기능을 제공하는 프레임워크
	-. DI, AOP, 트랜잭션, 시큐리티 등의 기능을 제공

스프링 프레임워크의 특징
	-. 상대적으로(EJB) 가벼운 JavaEE 컨테이너로 기존 JavaEE 기능 다수를 제공
	-. POJO 기반으로 작성, 테스트 및 배포가 쉬움
	-. 다른 프레임워크와의 연동 지원
	-. 설정 파일 변경만으로도 소스 수정없이 클래스 사이의 새로운 의존 관계 설정
	-. 

[bash]
cd %ECLIPSE_WORKSPACE_HOME%
$ git clone

https://github.com/junkiebyte/Spring-MVC-Project.git jvx330

롬북 다운받음

C:\PSH\eclipse>java -jar lombok.jar

HELP -> 마켓에서 스프링3 다운받음

asm <--------core <-------- beans
		<------- expression <---------- context <--------- transaction


스프링 DI (Dependency Injection)
	-. 빈 객체들간의 의존관계 설정에 대한 방식
	-. 객체들간의 상호 참조 형태를 객체 자신들이 아닌 외부 어셈블러에 의해 수행
	-. 관련 참조 및 매핑 정보를 외부 파일로 제공
		-.객체들간의 의존관계를 약하게 하고 (loose coupling)
		-.코드들에 대한 단위 테스트가 쉽다.

스프링 DI 컨테이너
	-. 스프링 프레임워크는 스프링 컨테이너를 통해 DI를 제공 
	-. 스프링 컨테이너는 빈 객체들의 생성, 저장, 소멸 등과 같은 라이프사이클 관리를 수행
	-. 빈 설정 매핑 정보를 바탕으로 빈 들간의 의존 관계를 설정

스프링 컨테이너 인터페이스
	-. BeanFactory 
	-. ApplicationContext
	-. WebApplicationContext

BeanFactory 인터페이스
	-. 빈객체를 관리하고 빈 들간의 의존 관계를 설정해 주는 기능을 제공
	-. 구현체로는 XmlBeanFactory 클래스등이 있다.
		Resource resource = new 
		ClasspathResource("com/varxyz/jvx330/di/example1/beans.xml");
		BeanFactory factory = new XmlBeanFactory(resource);
		Foo foo = (Foo)factory.getBean("foo");

ApplicationContext 인터페이스
	-. BeanFactory 인터페이스의 자식 인터페이스로서 일반적인 애플리케이션 개발시 주로 사용
	-. BeanFactory의 빈 관리 기능과 더불어 자원처리 추상화, 메시지, 이벤트, 국제화 등을 지원
	
WebApplicationContext 인터페이스
	-. 웹 애플리케이션 개발시 사용되며 웹 애플리케이션 당 하나씩 존재하는 컨테이너
	-. ApplicationContext인터페이스를 상속하며 빈 scope에 대한 추가 기능 정의
	-. 구현체로서 XmlWebApplicationContext클래스 등이 있다.

빈 생성과 의존관계
	-. 스프링 컨테이너는 기본적으로 XML 파일을 통해 빈 객체와 연관 관계를 설정
	-. 스프링 설정 파일은 DTD방식 설정과 스키마 방식 설정 모두 지원
	-. 스프링은 관리할 빈을 등록하기 위해서 <bean>태그를 사용
	-. 스프링은 주어진 클래스의 생성자를 이용하여 빈을 생성
	-. <constructor-arg> 태그 정의가 없다면 아규먼트가 없는 생성자를 이용한다.(디폴트 생성자)
	-. 스프링은 기본적으로 하나의 클래스 당 하나의 빈을 생성하여 재사용한다.
	-. 빈 태그의 속성
		name : 용도가 id 동일, 슬래쉬( / )같은 특수문자를 포함할 수 있다.
		id : 생성된 빈 객체를 위한 식별값
		class : 생성할 빈의 클래스로서 패키지를 포함한 완전한 클래스명을 지정
		scope : 빈의 scope 속성으로 singletone(디폴트), prototype, request, session,
		global-session
		abstract : 이 값이 true이면 해당 빈 인스턴스를 생성하지 않는다.
		factory-method : 싱글톤 클래스의 경우 해당 객체를 얻기 위한 메소드를 지정
		init-method : 빈이 생성된 후 빈 객체에 대한 초기화 작업을 처리할 메소드를 지정
		destroy-method : 빈 소멸 직전에 자원 해제와 같은 소멸 작업을 처리할 메소드를 지정

메뉴(MenuItem) - 메뉴이름(name), 메뉴가격(price)

MenuItemservice의 기능 - 신규 MenuItem 등록, 등록된 모든 메뉴 조회, 메뉴이름으로 메뉴 검색

하나이상의 신규메뉴를 등록하고
등록된 메뉴를 출력하고
메뉴명으로 메뉴를 검색할 수 있도록 구현
	





